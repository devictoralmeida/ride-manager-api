{
  "openapi": "3.0.0",
  "info": {
    "title": "Documentation RideManager",
    "description": "API developed for a car rental company",
    "version": "1.0.0",
    "contact": {
      "email": "victoremmanuelmn@gmail.com"
    }
  },
  "servers": [
    {
      "url": "https://api.ridemanager.com.br"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "description": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/response/User"
                }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "User already exists."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user profile",
        "description": "Get user profile",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Sucess",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/response/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/avatar": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user avatar",
        "description": "Update user avatar",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/response/UserAvatar"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "User not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/password/forgot": {
      "post": {
        "tags": ["Password"],
        "summary": "Send forgot email password",
        "description": "Send forgot email password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "maxLength": "45",
                    "format": "email",
                    "uniqueItems": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "type": "object",
                  "example": {
                    "message": "Email sent with success"
                  }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "User not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/password/reset?token=": {
      "post": {
        "tags": ["Password"],
        "summary": "Reset user's password",
        "description": "Reset user's password",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "The refresh token received by email",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "minLength": "4",
                    "maxLength": "6",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "type": "object",
                  "example": {
                    "message": "Password changed successfully"
                  }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "User not found"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Token expired or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Token expired OR invalid token"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": ["Categories - Admin Token"],
        "summary": "Create a new category",
        "description": "Create a new category",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Category"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/response/Category"
                }
              }
            }
          },
          "409": {
            "description": "Category already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Category already exists"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Categories"],
        "summary": "List all categories",
        "description": "List all categories",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/response/Category"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/import": {
      "post": {
        "tags": ["Categories - Admin Token"],
        "summary": "Upload a new category from a csv file",
        "description": "Upload a new category from a csv file",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "409": {
            "description": "Category already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Category already exists"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/specifications": {
      "post": {
        "tags": ["Specifications - Admin Token"],
        "summary": "Create a new specification",
        "description": "Create a new specification",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Specification"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/response/Specification"
                }
              }
            }
          },
          "409": {
            "description": "Specification already exists",
            "content": {
              "application/json": {
                "example": {
                  "message": "Specification already exists"
                }
              }
            }
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": ["Login"],
        "summary": "Authentication user",
        "description": "Authentication user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "maxLength": "45"
                  },
                  "password": {
                    "type": "string",
                    "minLength": "4",
                    "maxLength": "6",
                    "format": "password"
                  }
                },
                "example": {
                  "email": "johndoe@example.com",
                  "password": "123456"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "token": "A JWT token will return",
                    "refresh_token": "A JWT refresh token will return",
                    "user": {
                      "name": "john doe",
                      "email": "johndoe@example.com"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Email or password incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Email or password incorrect"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars": {
      "post": {
        "tags": ["Cars - Admin token"],
        "summary": "Create a new car",
        "description": "Create a new car",
        "x-admin": true,
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Car"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/response/Car"
                }
              }
            }
          },
          "409": {
            "description": "Car already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Car already exists!"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars/available": {
      "get": {
        "tags": ["Cars"],
        "summary": "List all available cars",
        "description": "List all available cars",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/response/Car"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars/images/{id}": {
      "post": {
        "tags": ["Cars - Admin token"],
        "summary": "Upload car images",
        "description": "Upload car images",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/cars/specifications/{id}": {
      "post": {
        "tags": ["Cars - Admin token"],
        "summary": "Add a specification to an existing car",
        "description": "Add a specification to an existing car",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "specifications_id": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/response/CarWithSpecifications"
                }
              }
            }
          },
          "404": {
            "description": "Car does not exists OR Specification does not exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Car does not exists!",
                    "message2": "Specification does not exists"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rentals/user": {
      "get": {
        "tags": ["Rentals"],
        "summary": "List all rentals by user",
        "description": "List all rentals by user",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/response/RentalAndCar"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rentals": {
      "post": {
        "tags": ["Rentals"],
        "summary": "Create a new rent to an existing car",
        "description": "Create a new rent to an existing car, minimal rent time is 24h or 1 day.",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Rental"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/response/Rental"
                }
              }
            }
          },
          "409": {
            "description": "Car is unavailable OR There is a rental in progress for user! OR Invalid return time!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Car is unavailable",
                    "message2": "There is a rental in progress for user!",
                    "message3": "Invalid return time!"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/rentals/devolution/{id}": {
      "post": {
        "tags": ["Rentals"],
        "summary": "Route for returning a car",
        "description": "Route for returning a car",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Rental id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/response/RentalDevolution"
                }
              }
            }
          },
          "409": {
            "description": "This rental does not belongs to the user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "This rental does not belongs to the user."
                  }
                }
              }
            }
          },
          "404": {
            "description": "Rental does not exists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Rental does not exists."
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": "3",
          "maxLength": "45"
        },
        "password": {
          "type": "string",
          "minLength": "4",
          "maxLength": "6",
          "format": "password"
        },
        "driver_license": {
          "type": "string",
          "maxLength": "10"
        },
        "email": {
          "type": "string",
          "maxLength": "45",
          "format": "email",
          "uniqueItems": true
        }
      },
      "example": {
        "name": "John Doe",
        "email": "johndoe@gmail.com",
        "driver_license": "ORR-7597",
        "password": "1234"
      }
    },
    "Specification": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": "1",
          "maxLength": "20",
          "uniqueItems": true
        },
        "description": {
          "type": "string",
          "minLength": "1",
          "maxLength": "20"
        }
      },
      "example": {
        "name": "Specif name",
        "description": "Specif desc"
      }
    },
    "Car": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": "1",
          "maxLength": "20",
          "uniqueItems": true
        },
        "description": {
          "type": "string",
          "minLength": "1",
          "maxLength": "20"
        },
        "license_plate": {
          "type": "string",
          "minLength": "8",
          "maxLength": "8",
          "uniqueItems": true
        },
        "fine_amount": {
          "type": "number",
          "minimum": 1
        },
        "daily_date": {
          "type": "number",
          "minimum": 1
        },
        "brand": {
          "type": "string",
          "minLength": "1",
          "maxLength": "15"
        },
        "category_id": {
          "type": "string",
          "format": "uuid"
        }
      },
      "example": {
        "name": "Car name",
        "description": "Car description",
        "brand": "Car brand",
        "daily_rate": 100,
        "fine_amount": 60,
        "license_plate": "ABA-1234",
        "category_id": "ddd9588f-b5c8-4a00-98f9-381959e1c01a"
      }
    },
    "Rental": {
      "type": "object",
      "properties": {
        "car_id": {
          "type": "string",
          "format": "uuid"
        },
        "expected_return_date": {
          "type": "string",
          "format": "date-time",
          "minLength": "1 day"
        }
      },
      "example": {
        "car_id": "5ee0fcea-3af5-444b-a393-c7da07c9f0c0",
        "expected_return_date": "2023-10-31T17:32:28Z"
      }
    },
    "Category": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": "1",
          "maxLength": "20",
          "uniqueItems": true
        },
        "description": {
          "type": "string",
          "minLength": "1",
          "maxLength": "20"
        }
      },
      "example": {
        "name": "Category name",
        "description": "Category desc"
      }
    }
  },
  "response": {
    "User": {
      "type": "object",
      "example": {
        "id": "4445bfd3-d95c-414d-8713-d8f956211bdb",
        "name": "john doe",
        "email": "johndoe@gmail.com",
        "driver_license": "ORR-7597",
        "avatar": null,
        "avatar_url": null,
        "isAdmin": false,
        "created_at": "2023-10-31T17:32:28Z"
      }
    },
    "UserAvatar": {
      "type": "object",
      "example": {
        "id": "uuid",
        "name": "string",
        "email": "string",
        "driver_license": "string",
        "avatar": "string",
        "avatar_url": "url",
        "isAdmin": "boolean",
        "created_at": "date"
      }
    },
    "Car": {
      "type": "object",
      "example": {
        "id": "ddd9588f-b5c8-4a00-98f9-381959e1c017",
        "name": "Car name",
        "description": "Car description",
        "brand": "Car brand",
        "daily_rate": 100,
        "fine_amount": 60,
        "license_plate": "ABA-1234",
        "available": true,
        "category_id": "ddd9588f-b5c8-4a00-98f9-381959e1c01a",
        "created_at": "2023-10-31T17:32:28Z"
      }
    },
    "CarWithSpecifications": {
      "type": "object",
      "example": {
        "id": "24a65ef9-81de-4a3d-be09-db534e24f335",
        "name": "Car name",
        "description": "Car description",
        "brand": "Car brand",
        "daily_rate": 100,
        "fine_amount": 60,
        "license_plate": "ABA-1234",
        "available": true,
        "category_id": "ddd9588f-b5c8-4a00-98f9-381959e1c01a",
        "created_at": "2023-10-31T17:32:28Z",
        "specifications": [
          {
            "id": "86f5ffab-8ca3-4844-beac-cbaba93b6004",
            "name": "Specif name",
            "description": "Specif desc",
            "created_at": "2023-10-30T12:32:28Z"
          },
          {
            "id": "3369a9fa-5050-499a-be22-72c96e3e37be",
            "name": "Specif 2",
            "description": "Specif 2",
            "created_at": "2023-10-31T17:32:28Z"
          }
        ]
      }
    },
    "Rental": {
      "type": "object",
      "example": {
        "id": "2309f1c1-6a87-4754-acb1-bfef55893678",
        "car_id": "5ee0fcea-3af5-444b-a393-c7da07c9f0c0",
        "user_id": "a63efeba-f9fe-4705-b7b8-0f52841ad7f3",
        "created_at": "2023-10-29T17:32:28Z",
        "start_date": "2023-10-29T17:32:28Z",
        "expected_return_date": "2023-10-31T17:32:28Z"
      }
    },
    "RentalDevolution": {
      "type": "object",
      "example": {
        "id": "2309f1c1-6a87-4754-acb1-bfef55893678",
        "car_id": "5ee0fcea-3af5-444b-a393-c7da07c9f0c0",
        "user_id": "a63efeba-f9fe-4705-b7b8-0f52841ad7f3",
        "created_at": "2023-10-29T17:32:28Z",
        "updated_at": "2023-10-29T17:32:28Z",
        "start_date": "2023-10-29T17:32:28Z",
        "expected_return_date": "2023-10-31T17:32:28Z",
        "end_date": "2023-10-31T10:30:28Z",
        "total": 50
      }
    },
    "RentalAndCar": {
      "type": "object",
      "example": {
        "id": "2309f1c1-6a87-4754-acb1-bfef55893678",
        "car_id": "5ee0fcea-3af5-444b-a393-c7da07c9f0c0",
        "user_id": "a63efeba-f9fe-4705-b7b8-0f52841ad7f3",
        "total": 100,
        "created_at": "2023-10-29T17:32:28Z",
        "updated_at": "2023-10-29T17:32:28Z",
        "start_date": "2023-10-29T17:32:28Z",
        "expected_return_date": "2023-10-31T17:32:28Z",
        "end_date": "2023-10-31T10:30:28Z",
        "car": {
          "id": "ddd9588f-b5c8-4a00-98f9-381959e1c017",
          "name": "Car name",
          "description": "Car description",
          "brand": "Car brand",
          "daily_rate": 100,
          "fine_amount": 60,
          "license_plate": "ABA-1234",
          "available": true,
          "category_id": "ddd9588f-b5c8-4a00-98f9-381959e1c01a",
          "created_at": "2023-10-31T17:32:28Z"
        }
      }
    },
    "Category": {
      "type": "object",
      "example": {
        "id": "ddd9588f-b5c8-4a00-98f9-381959e1c020",
        "name": "Category name",
        "description": "Category desc",
        "created_at": "2023-10-31T17:32:28Z"
      }
    },
    "Specification": {
      "type": "object",
      "example": {
        "id": "38120e3e-c6fa-4879-9039-3104be038c09",
        "name": "Specif name",
        "description": "Specif desc",
        "created_at": "2023-10-31T17:32:28Z"
      }
    },
    "CarImage": {
      "type": "object",
      "example": {
        "id": "508bcbf2-a671-411c-abdc-6d9c49b1e77c",
        "car_id": "5cec63cf-bf08-4125-bc44-fd2be0895306",
        "image_name": "Image Name",
        "created_at": "2023-10-31T17:32:28Z"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
